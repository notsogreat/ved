generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String                    @id @default(uuid()) @db.Uuid
  name                    String?
  email                   String                    @unique
  password                String
  createdAt               DateTime                  @default(now()) @map("created_at")
  updatedAt               DateTime                  @map("updated_at")
  image                   String?
  chatSessions            ChatSession[]
  user_performance_scores user_performance_scores[]

  @@map("users")
}

model ChatSession {
  id                      String                    @id @default(uuid()) @db.Uuid
  userId                  String                    @map("user_id") @db.Uuid
  title                   String?
  createdAt               DateTime                  @default(now()) @map("created_at")
  updatedAt               DateTime                  @default(now()) @updatedAt @map("updated_at")
  messages                ChatMessage[]
  user                    User                      @relation(fields: [userId], references: [id])
  codeSubmissions         CodeSubmission[]
  user_performance_scores user_performance_scores[]

  @@map("chat_sessions")
}

model ChatMessage {
  id               String           @id @default(uuid()) @db.Uuid
  sessionId        String           @map("session_id") @db.Uuid
  sender           MessageSender
  messageType      MessageType      @map("message_type")
  message          String
  codeSubmissionId String?          @unique @map("code_submission_id") @db.Uuid
  createdAt        DateTime         @default(now()) @map("created_at")
  codeSubmission   CodeSubmission?  @relation("EvaluationMessage", fields: [codeSubmissionId], references: [id])
  session          ChatSession      @relation(fields: [sessionId], references: [id])
  submissions      CodeSubmission[] @relation("QuestionMessage")

  @@map("chat_messages")
}

model CodeSubmission {
  id            String       @id @default(uuid()) @db.Uuid
  sessionId     String       @map("session_id") @db.Uuid
  chatMessageId String       @map("chat_message_id") @db.Uuid
  language      String
  code          String
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @default(now()) @updatedAt @map("updated_at")
  evaluation    ChatMessage? @relation("EvaluationMessage")
  question      ChatMessage  @relation("QuestionMessage", fields: [chatMessageId], references: [id])
  session       ChatSession  @relation(fields: [sessionId], references: [id])

  @@map("code_submissions")
}

model user_performance_scores {
  id                   String      @id @db.Uuid
  user_id              String      @db.Uuid
  session_id           String      @db.Uuid
  problemUnderstanding Int
  dataStructureChoice  Int
  timeComplexity       Int
  codingStyle          Int
  edgeCases            Int
  languageUsage        Int
  communication        Int
  optimization         Int
  totalScore           Int
  targetJobTitle       String
  created_at           DateTime    @default(now())
  chat_sessions        ChatSession @relation(fields: [session_id], references: [id])
  users                User        @relation(fields: [user_id], references: [id])
}

enum MessageSender {
  user
  assistant
}

enum MessageType {
  general
  question
  evaluation
  system
}
